@model IEnumerable<DDShoeReps.Models.mvcStockModel>

@{
    ViewBag.Title = "ViewStock";
    @Styles.Render("~/Content/productIndex.css")
    string userName = Session["UserName"] as string;
    string userId = Session["UserID"] as string;
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
}

<style>
    .container {
        text-align: center;
    }

    .col-sm-4 {
        width: 300px;
        height: 400px;
        background-color:beige;
        border-radius: 10px;
        margin: 45px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        transition: transform 0.3s ease-in-out;
    }

        .col-sm-4 img {
            border-radius: 10px;
            width: 200px;
            height: 200px;
        }

        .col-sm-4 span {
            display: block;
            color: black;
            margin-top: 0px;
        }

    .addToCartButton {
        display: inline-block;
        margin-top: 15px;
        padding: 10px 20px;
        background-color: #3498db;
        color: #fff;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease-in-out;
    }

        .addToCartButton:hover {
            background-color: #2980b9;
        }

    .col-sm-4:hover {
        transform: scale(1.05);
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
    }
</style>

<div style="float: left; margin-left: 20px;">
    @{
        string lastVisitedDashboard = Session["LastVisitedDashboard"] as string ?? "DefaultDashboard";
        string backUrl = "";
        switch (lastVisitedDashboard)
        {
            case "BranchDashboard":
                backUrl = Url.Action("BranchDashboard", "Home");
                break;
            case "PartnerDashboard":
                backUrl = Url.Action("PartnerDashboard", "Home");
                break;
            default:
                backUrl = Url.Action("DefaultDashboard", "Home");
                break;
        }
    }

    <a href="@backUrl" class="btn btn-primary " style="margin-left:100px; background-color:black;">Back to Dashboard</a>
</div>
<br />

<div class="tbl">
  

    <div style="margin: 0px;">
        <div style="float: left; margin-right: 20px;">
            <input type="text" id="searchInput" />
            <button id="searchButton" class="btn btn-primary">Search</button>
        </div>
        <div style="float: right; margin-left: 20px;">
            <a href="@Url.Action("Index", "Cart")" class="btn btn-primary" style="background-color: black; color: white;">View Cart</a>
        </div>
        <div style="clear: both;"></div>
    </div>

    <div class="container" style="text-align:center; ">
        <div class="row">
            @foreach (var item in Model)
            {
            <div class="col-sm-4">
                <img src="~/image/@item.ProductImage" alt="Image" width="200" height="200" />
                <span class="h3 text-info">@item.ProductName</span>
                <span class="h5 text-info">Rs. @item.ProductPrice</span>
                <span class="h6 text-info">Available @item.Quantity pcs</span>



                <div class="quantity-container">
                    <a href="@Url.Action("AddToCart", "SellCart", new { @ProductID = item.ProductID })" class="btn btn-primary addToCartButton" data-product-id="@item.ProductID">Add to Cart</a>
                </div>
            </div>
            }
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $(".addToCartButton").each(function () {
            var productID = $(this).data("product-id");
            var initialColor = GetButtonColor(productID);
            $(this).css('background-color', initialColor);

            $(this).click(function (event) {
                event.preventDefault();

                $.ajax({
                    url: '/Cart/AddToCart?productID=' + productID,
                    type: 'GET',
                    success: function () {
                        updateCartQuantity(productID);
                        updateButtonColor(productID);
                    },
                    error: function () {
                        console.error('Failed to add to cart.');
                    }
                });
            });
        });

        function updateCartQuantity(productID) {
            $.ajax({
                url: '/Cart/GetCartQuantity',
                type: 'GET',
                success: function (data) {
                    $('#quantity_' + productID).text(data.ProductQuantity);
                },
                error: function () {
                    console.error('Failed to retrieve cart quantity.');
                }
            });
        }

        function updateButtonColor(productID) {
            $('.addToCartButton[data-product-id=' + productID + ']').css('background-color', 'orange');
        }

        function GetButtonColor(productID) {
            return '#007bff';
        }

        $("#searchButton").click(function () {
            var searchTerm = $("#searchInput").val().toLowerCase();

            $(".col-sm-4").hide();

            $(".col-sm-4").filter(function () {
                return $(this).text().toLowerCase().includes(searchTerm);
            }).show();
        });
    });

    $(function () {
        var successMessage = '@TempData["SuccessMessage"]'
        if (successMessage != '') alertify.success(successMessage);

    });


</script>

